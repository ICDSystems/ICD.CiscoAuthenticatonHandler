/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: ICD Systems
System Name: Cisco Authantication Handler
System Number: 1
Programmer: Drew Tingen
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
#DEFINE_CONSTANT ciOPTIONLISTSIZE 10
// #CATEGORY "" 
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
#USER_SIMPLSHARP_LIBRARY "ICD.CiscoAuthenticationHandler"

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT SendSubscribe, _SKIP_, KeypadBackspace, KeypadClear, Submit, _SKIP_;
ANALOG_INPUT OptionSelect, _SKIP_;
STRING_INPUT VtcRx[65534];

DIGITAL_INPUT _SKIP_, KeypadPress[12];
// BUFFER_INPUT 

DIGITAL_OUTPUT AuthenticationRequired, KeypadHasValue, EnableKeypad, EnableJoinButton, ShowOptionList, _SKIP_;
ANALOG_OUTPUT OptionListCount, OptionSelected, _SKIP_;
STRING_OUTPUT VtcTx, KeypadTextFeedback, _SKIP_, OptionListItem[ciOPTIONLISTSIZE];

/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/
// INTEGER_PARAMETER
// SIGNED_INTEGER_PARAMETER
// LONG_INTEGER_PARAMETER
// SIGNED_LONG_INTEGER_PARAMETER
// STRING_PARAMETER

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
AuthenticationHandler handler;

/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
******************************************************************************************/
Callback Function VtcTxCallback(string data)
{
	VtcTx = data;
}


Callback Function AuthenticationRequiredCallback(integer data)
{
	AuthenticationRequired = data;
}

Callback Function KeypadTextFeedbackCallback(string data)
{
	KeypadTextFeedback = data;
}

Callback Function KeypadHasValueCallback(integer data)
{
	KeypadHasValue = data;
}

Callback Function EnableKeypadCallback(integer data)
{
  EnableKeypad = data;
}

Callback Function EnableJoinButtonCallback(integer data)
{
  EnableJoinButton = data;
}

Callback Function ShowOptionListCallback(integer data)
{
  ShowOptionList = data;
}

Callback Function OptionListCountCallback(integer data)
{
  OptionListCount = data;
}

Callback Function OptionListItemCallback(integer index, string data)
{
  // Add 1 to keep S+ 1 indexed
  index = index + 1;

  if (index >= 1 & index <= ciOPTIONLISTSIZE)
    OptionListItem[index] = data;

}

Callback Function OptionListSelectedCallback(integer data)
{
  // Add 1 to keep S+ 1 indexed
  OptionSelected = data + 1;
}

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/

PUSH KeypadPress
{
	integer i;
	i = GetLastModifiedArrayIndex();

	handler.KeypadPressKey(i);
}

PUSH SendSubscribe
{
	handler.SendSubscribe();
}

PUSH KeypadBackspace
{
	handler.KeypadBackspace();
}

PUSH KeypadClear
{
	handler.KeypadClear();
}

PUSH Submit
{
	handler.KeypadSubmit();
}

CHANGE OptionSelect
{
  // subtract 1 to keep S+ 1-indexed
  handler.SelectOption(OptionSelect - 1);
}

CHANGE VtcRx
{
	handler.VtcRx(VtcRx);
}


/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{
	RegisterDelegate(handler, VtcTx, VtcTxCallback);
	RegisterDelegate(handler, AuthenticationRequired, AuthenticationRequiredCallback);
	RegisterDelegate(handler, KeypadTextFeedback, KeypadTextFeedbackCallback);
	RegisterDelegate(handler, KeypadHasValue, KeypadHasValueCallback);
  RegisterDelegate(handler, EnableKeypad, EnableKeypadCallback);
  RegisterDelegate(handler, EnableJoinButton, EnableJoinButtonCallback);
  RegisterDelegate(handler, ShowOptionList, ShowOptionListCallback);
  RegisterDelegate(handler, OptionListCount, OptionListCountCallback);
  RegisterDelegate(handler, OptionListSelected, OptionListSelectedCallback);
  RegisterDelegate(handler, OptionListItem, OptionListItemCallback);
}
